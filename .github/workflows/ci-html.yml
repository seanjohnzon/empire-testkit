name: CI HTML Report

on:
  push:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 1) Write a real .env from GitHub Secrets (REQUIRED)
      - name: Create .env for tests
        run: |
          cat > .env <<'EOF'
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          TEST_WALLET=${{ secrets.TEST_WALLET }}
          OPEN_PACK_FN=${{ secrets.OPEN_PACK_FN }}
          TRAIN_UNIT_FN=${{ secrets.TRAIN_UNIT_FN }}
          ECONOMY_STATS_FN=${{ secrets.ECONOMY_STATS_FN }}
          REFERRAL_CAPTURE_FN=${{ secrets.REFERRAL_CAPTURE_FN }}
          SIGN_CLAIM_FN=${{ secrets.SIGN_CLAIM_FN }}
          SEASON_PUBKEY=${{ secrets.SEASON_PUBKEY }}
          EOF

      # 2) Quick sanity print (redacted) so we can SEE if env is actually present
      - name: Sanity check env
        run: |
          node -e "
            console.log('SUPABASE_URL prefix:', (process.env.SUPABASE_URL||'').slice(0,30));
            console.log('SUPABASE_ANON_KEY present:', !!process.env.SUPABASE_ANON_KEY);
          "

      # 3) Install deps (use npm ci if youâ€™ve added a lockfile; else fallback to install)
      - name: Install dependencies
        run: npm ci || npm i --no-audit --no-fund

      # 4) Run tests and build HTML report (your package script)
      - name: Run tests & build HTML report
        run: npm run ci:html

      # 5) Upload HTML report as an artifact
      - uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: |
            reports/
            .vitest-reports/json.json

      # 6) (Optional) Publish the reports folder to Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports

      - name: Deploy to Pages
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/deploy-pages@v4
